Recursive solution============>>>


class Solution {
  public:
    // Function to convert a binary tree into its mirror tree.
    void mirror(Node* node) {
        // code here
        if(node==0)
        return;
        
        swap(node->left,node->right);
        
        mirror(node->left);
        mirror(node->right);
        
    }
};




WITHOUT USING RECURSION PROBLEM

void mirror(Node* root) {
    if (!root) return;

    queue<Node*> q;
    q.push(root);

    while (!q.empty()) {
        Node* curr = q.front();
        q.pop();

        swap(curr->left, curr->right);

        if (curr->left) q.push(curr->left);
        if (curr->right) q.push(curr->right);
    }
}
