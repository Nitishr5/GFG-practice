Given a string s, the task is to find the minimum characters to be added at the front to make the string palindrome.

Note: A palindrome string is a sequence of characters that reads the same forward and backward.

Examples:

Input: s = "abc"
Output: 2
Explanation: Add 'b' and 'c' at front of above string to make it palindrome : "cbabc"
Input: s = "aacecaaaa"
Output: 2
Explanation: Add 2 a's at front of above string to make it palindrome : "aaaacecaaaa"





































// } Driver Code Ends
class Solution {
  public:
    int minChar(string& str) {
        // Write your code here
        //string reverse
        string rev=str;
        reverse(rev.begin(),rev.end());
        int size= str.size();
        str+='$';//seprator
        str+=rev;//Reverse
        
        //LPS nikalna hai
        int n=str.size();
        vector<int>lps(n,0);
        
        int pre=0,suf=1;
        
        while(suf<str.size())
        {
            //match
            if(str[pre]==str[suf])
            {
                lps[suf]=pre+1;
                pre++,suf++;
            }
            
            //Not match
            else{
                if(pre==0)
                
                    // lps[suf]=0;
                    suf++;
                    else{
                        pre=lps[pre-1];
                    }
            }
            
        }
        
        //Answer dena hai
        return size-lps[n-1];
    }
    
};


