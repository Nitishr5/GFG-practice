Row with max 1s--->

You are given a 2D binary array arr[][] consisting of only 1s and 0s. Each row of the array is sorted in non-decreasing order. Your task is to find and return the index of the first row that contains the maximum number of 1s. If no such row exists, return -1.

Note:
The array follows 0-based indexing.
The number of rows and columns in the array are denoted by n and m respectively.
Examples:

Input: arr[][] = [[0,1,1,1], [0,0,1,1], [1,1,1,1], [0,0,0,0]]
Output: 2
Explanation: Row 2 contains the most number of 1s (4 1s). Hence, the output is 2.














int n=arr.size();
        int m=arr[0].size();
        
        int row=0,col=m-1;
        int max_row=-1;
        
        while(row<n&&col>=0){
            if(arr[row][col]==1){
                max_row=row;
                col--;
            }
            else{
                row++;
            }
        }
        return max_row;
    }
